package test.model;

import java.util.ArrayList;
import java.util.List;

public class NewsplusExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table newsplus
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table newsplus
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table newsplus
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table newsplus
     *
     * @mbg.generated
     */
    public NewsplusExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table newsplus
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table newsplus
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table newsplus
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table newsplus
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table newsplus
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table newsplus
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table newsplus
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table newsplus
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table newsplus
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table newsplus
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table newsplus
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTypeidIsNull() {
            addCriterion("typeid is null");
            return (Criteria) this;
        }

        public Criteria andTypeidIsNotNull() {
            addCriterion("typeid is not null");
            return (Criteria) this;
        }

        public Criteria andTypeidEqualTo(Integer value) {
            addCriterion("typeid =", value, "typeid");
            return (Criteria) this;
        }

        public Criteria andTypeidNotEqualTo(Integer value) {
            addCriterion("typeid <>", value, "typeid");
            return (Criteria) this;
        }

        public Criteria andTypeidGreaterThan(Integer value) {
            addCriterion("typeid >", value, "typeid");
            return (Criteria) this;
        }

        public Criteria andTypeidGreaterThanOrEqualTo(Integer value) {
            addCriterion("typeid >=", value, "typeid");
            return (Criteria) this;
        }

        public Criteria andTypeidLessThan(Integer value) {
            addCriterion("typeid <", value, "typeid");
            return (Criteria) this;
        }

        public Criteria andTypeidLessThanOrEqualTo(Integer value) {
            addCriterion("typeid <=", value, "typeid");
            return (Criteria) this;
        }

        public Criteria andTypeidIn(List<Integer> values) {
            addCriterion("typeid in", values, "typeid");
            return (Criteria) this;
        }

        public Criteria andTypeidNotIn(List<Integer> values) {
            addCriterion("typeid not in", values, "typeid");
            return (Criteria) this;
        }

        public Criteria andTypeidBetween(Integer value1, Integer value2) {
            addCriterion("typeid between", value1, value2, "typeid");
            return (Criteria) this;
        }

        public Criteria andTypeidNotBetween(Integer value1, Integer value2) {
            addCriterion("typeid not between", value1, value2, "typeid");
            return (Criteria) this;
        }

        public Criteria andZdtipIsNull() {
            addCriterion("zdtip is null");
            return (Criteria) this;
        }

        public Criteria andZdtipIsNotNull() {
            addCriterion("zdtip is not null");
            return (Criteria) this;
        }

        public Criteria andZdtipEqualTo(String value) {
            addCriterion("zdtip =", value, "zdtip");
            return (Criteria) this;
        }

        public Criteria andZdtipNotEqualTo(String value) {
            addCriterion("zdtip <>", value, "zdtip");
            return (Criteria) this;
        }

        public Criteria andZdtipGreaterThan(String value) {
            addCriterion("zdtip >", value, "zdtip");
            return (Criteria) this;
        }

        public Criteria andZdtipGreaterThanOrEqualTo(String value) {
            addCriterion("zdtip >=", value, "zdtip");
            return (Criteria) this;
        }

        public Criteria andZdtipLessThan(String value) {
            addCriterion("zdtip <", value, "zdtip");
            return (Criteria) this;
        }

        public Criteria andZdtipLessThanOrEqualTo(String value) {
            addCriterion("zdtip <=", value, "zdtip");
            return (Criteria) this;
        }

        public Criteria andZdtipLike(String value) {
            addCriterion("zdtip like", value, "zdtip");
            return (Criteria) this;
        }

        public Criteria andZdtipNotLike(String value) {
            addCriterion("zdtip not like", value, "zdtip");
            return (Criteria) this;
        }

        public Criteria andZdtipIn(List<String> values) {
            addCriterion("zdtip in", values, "zdtip");
            return (Criteria) this;
        }

        public Criteria andZdtipNotIn(List<String> values) {
            addCriterion("zdtip not in", values, "zdtip");
            return (Criteria) this;
        }

        public Criteria andZdtipBetween(String value1, String value2) {
            addCriterion("zdtip between", value1, value2, "zdtip");
            return (Criteria) this;
        }

        public Criteria andZdtipNotBetween(String value1, String value2) {
            addCriterion("zdtip not between", value1, value2, "zdtip");
            return (Criteria) this;
        }

        public Criteria andZdnameIsNull() {
            addCriterion("zdname is null");
            return (Criteria) this;
        }

        public Criteria andZdnameIsNotNull() {
            addCriterion("zdname is not null");
            return (Criteria) this;
        }

        public Criteria andZdnameEqualTo(String value) {
            addCriterion("zdname =", value, "zdname");
            return (Criteria) this;
        }

        public Criteria andZdnameNotEqualTo(String value) {
            addCriterion("zdname <>", value, "zdname");
            return (Criteria) this;
        }

        public Criteria andZdnameGreaterThan(String value) {
            addCriterion("zdname >", value, "zdname");
            return (Criteria) this;
        }

        public Criteria andZdnameGreaterThanOrEqualTo(String value) {
            addCriterion("zdname >=", value, "zdname");
            return (Criteria) this;
        }

        public Criteria andZdnameLessThan(String value) {
            addCriterion("zdname <", value, "zdname");
            return (Criteria) this;
        }

        public Criteria andZdnameLessThanOrEqualTo(String value) {
            addCriterion("zdname <=", value, "zdname");
            return (Criteria) this;
        }

        public Criteria andZdnameLike(String value) {
            addCriterion("zdname like", value, "zdname");
            return (Criteria) this;
        }

        public Criteria andZdnameNotLike(String value) {
            addCriterion("zdname not like", value, "zdname");
            return (Criteria) this;
        }

        public Criteria andZdnameIn(List<String> values) {
            addCriterion("zdname in", values, "zdname");
            return (Criteria) this;
        }

        public Criteria andZdnameNotIn(List<String> values) {
            addCriterion("zdname not in", values, "zdname");
            return (Criteria) this;
        }

        public Criteria andZdnameBetween(String value1, String value2) {
            addCriterion("zdname between", value1, value2, "zdname");
            return (Criteria) this;
        }

        public Criteria andZdnameNotBetween(String value1, String value2) {
            addCriterion("zdname not between", value1, value2, "zdname");
            return (Criteria) this;
        }

        public Criteria andZdtypeIsNull() {
            addCriterion("zdtype is null");
            return (Criteria) this;
        }

        public Criteria andZdtypeIsNotNull() {
            addCriterion("zdtype is not null");
            return (Criteria) this;
        }

        public Criteria andZdtypeEqualTo(Integer value) {
            addCriterion("zdtype =", value, "zdtype");
            return (Criteria) this;
        }

        public Criteria andZdtypeNotEqualTo(Integer value) {
            addCriterion("zdtype <>", value, "zdtype");
            return (Criteria) this;
        }

        public Criteria andZdtypeGreaterThan(Integer value) {
            addCriterion("zdtype >", value, "zdtype");
            return (Criteria) this;
        }

        public Criteria andZdtypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("zdtype >=", value, "zdtype");
            return (Criteria) this;
        }

        public Criteria andZdtypeLessThan(Integer value) {
            addCriterion("zdtype <", value, "zdtype");
            return (Criteria) this;
        }

        public Criteria andZdtypeLessThanOrEqualTo(Integer value) {
            addCriterion("zdtype <=", value, "zdtype");
            return (Criteria) this;
        }

        public Criteria andZdtypeIn(List<Integer> values) {
            addCriterion("zdtype in", values, "zdtype");
            return (Criteria) this;
        }

        public Criteria andZdtypeNotIn(List<Integer> values) {
            addCriterion("zdtype not in", values, "zdtype");
            return (Criteria) this;
        }

        public Criteria andZdtypeBetween(Integer value1, Integer value2) {
            addCriterion("zdtype between", value1, value2, "zdtype");
            return (Criteria) this;
        }

        public Criteria andZdtypeNotBetween(Integer value1, Integer value2) {
            addCriterion("zdtype not between", value1, value2, "zdtype");
            return (Criteria) this;
        }

        public Criteria andZdcontentIsNull() {
            addCriterion("zdcontent is null");
            return (Criteria) this;
        }

        public Criteria andZdcontentIsNotNull() {
            addCriterion("zdcontent is not null");
            return (Criteria) this;
        }

        public Criteria andZdcontentEqualTo(String value) {
            addCriterion("zdcontent =", value, "zdcontent");
            return (Criteria) this;
        }

        public Criteria andZdcontentNotEqualTo(String value) {
            addCriterion("zdcontent <>", value, "zdcontent");
            return (Criteria) this;
        }

        public Criteria andZdcontentGreaterThan(String value) {
            addCriterion("zdcontent >", value, "zdcontent");
            return (Criteria) this;
        }

        public Criteria andZdcontentGreaterThanOrEqualTo(String value) {
            addCriterion("zdcontent >=", value, "zdcontent");
            return (Criteria) this;
        }

        public Criteria andZdcontentLessThan(String value) {
            addCriterion("zdcontent <", value, "zdcontent");
            return (Criteria) this;
        }

        public Criteria andZdcontentLessThanOrEqualTo(String value) {
            addCriterion("zdcontent <=", value, "zdcontent");
            return (Criteria) this;
        }

        public Criteria andZdcontentLike(String value) {
            addCriterion("zdcontent like", value, "zdcontent");
            return (Criteria) this;
        }

        public Criteria andZdcontentNotLike(String value) {
            addCriterion("zdcontent not like", value, "zdcontent");
            return (Criteria) this;
        }

        public Criteria andZdcontentIn(List<String> values) {
            addCriterion("zdcontent in", values, "zdcontent");
            return (Criteria) this;
        }

        public Criteria andZdcontentNotIn(List<String> values) {
            addCriterion("zdcontent not in", values, "zdcontent");
            return (Criteria) this;
        }

        public Criteria andZdcontentBetween(String value1, String value2) {
            addCriterion("zdcontent between", value1, value2, "zdcontent");
            return (Criteria) this;
        }

        public Criteria andZdcontentNotBetween(String value1, String value2) {
            addCriterion("zdcontent not between", value1, value2, "zdcontent");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table newsplus
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table newsplus
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}